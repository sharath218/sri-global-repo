{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _this = this,\n    _jsxFileName = \"D:\\\\Sharath_Code\\\\next\\\\sri-global\\\\components\\\\ContactForm.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useState } from 'react';\nimport styles from '../styles/ContactForm.module.css';\nimport firebase from '../server/firebase';\nimport Select from './Select';\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\nimport * as Yup from 'yup';\nvar initialValues = {\n  Name: '',\n  Email: '',\n  PhoneNumber: '',\n  Place: '',\n  Service: ''\n};\nvar validationSchema = Yup.object({\n  Name: Yup.string().required('Please Enter Parent Name'),\n  Email: Yup.string().email('Invalid email format').required('Email Required'),\n  PhoneNumber: Yup.string().matches(/^[6-9]\\d{9}$/, {\n    message: \"Please enter valid number.\",\n    excludeEmptyString: false\n  }).required('Phone number is required'),\n  Place: Yup.string().required('Please Choose a place'),\n  Service: Yup.string().required('Please Choose a place')\n});\nvar placeOptions = [{\n  key: 'Select a Place',\n  value: ''\n}, {\n  key: 'Place1',\n  value: 'Place1'\n}, {\n  key: 'Place2',\n  value: 'Place2'\n}, {\n  key: 'None',\n  value: 'None'\n}];\nvar serviceOptions = [{\n  key: 'Select a Place',\n  value: ''\n}, {\n  key: 'Place1',\n  value: 'Place1'\n}, {\n  key: 'Place2',\n  value: 'Place2'\n}, {\n  key: 'None',\n  value: 'None'\n}];\n\nvar ContactForm = function ContactForm() {\n  _s();\n\n  var _useState = useState(false),\n      success = _useState[0],\n      setSuccess = _useState[1];\n\n  function registerUser(_x, _x2) {\n    return _registerUser.apply(this, arguments);\n  }\n\n  function _registerUser() {\n    _registerUser = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(values, _ref) {\n      var setSubmitting, resetForm, db;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              setSubmitting = _ref.setSubmitting, resetForm = _ref.resetForm;\n              console.log('Form data', values);\n              console.log('form  submit start');\n              db = firebase.firestore();\n              _context.next = 6;\n              return db.collection('usersdb').add({\n                Name: values.Name,\n                Email: values.Email,\n                PhoneNumber: values.PhoneNumber,\n                Place: values.Place,\n                Service: values.Service,\n                dateCreated: new Date()\n              }).then(function () {\n                resetForm();\n                setSubmitting(false);\n                setSuccess(true);\n              })[\"catch\"](function (error) {// console.error(\"Error writing document: \", error);\n              });\n\n            case 6:\n              console.log('form  submit end');\n\n            case 7:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n    return _registerUser.apply(this, arguments);\n  }\n\n  return __jsx(Formik, {\n    initialValues: initialValues,\n    validationSchema: validationSchema,\n    onSubmit: function onSubmit(values, _ref2) {\n      var setSubmitting = _ref2.setSubmitting,\n          resetForm = _ref2.resetForm;\n      setSuccess(false);\n      registerUser(values, {\n        setSubmitting: setSubmitting,\n        resetForm: resetForm\n      });\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }\n  }, function (_ref3) {\n    var isSubmitting = _ref3.isSubmitting,\n        isValid = _ref3.isValid;\n    return __jsx(\"div\", {\n      className: styles.contactForm,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 33\n      }\n    }, success ? __jsx(\"p\", {\n      className: styles.succesmsg,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 48\n      }\n    }, \" Form Submission successful \\u2714\\uFE0F\") : null, isSubmitting ? __jsx(\"div\", {\n      className: styles.loader,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 51\n      }\n    }, \" \") : __jsx(Form, {\n      className: styles.form,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 33\n      }\n    }, __jsx(\"h1\", {\n      style: {\n        margin: \"0px 0px\"\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 33\n      }\n    }, \"Contact Us\"), __jsx(\"label\", {\n      htmlFor: \"Name\",\n      className: styles.formLabel,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 33\n      }\n    }, __jsx(\"span\", {\n      className: styles.contentName,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 41\n      }\n    }, \"Name\")), __jsx(Field, {\n      className: styles.formInput,\n      type: \"text\",\n      id: \"Name\",\n      name: \"Name\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 33\n      }\n    }), __jsx(\"p\", {\n      className: styles.ErrorMessage,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 33\n      }\n    }, __jsx(ErrorMessage, {\n      name: \"Name\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 68\n      }\n    }), \" \"), __jsx(\"label\", {\n      htmlFor: \"Email\",\n      className: styles.formLabel,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 33\n      }\n    }, __jsx(\"span\", {\n      className: styles.contentName,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 41\n      }\n    }, \"Email\")), __jsx(Field, {\n      className: styles.formInput,\n      type: \"text\",\n      id: \"Email\",\n      name: \"Email\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 33\n      }\n    }), __jsx(\"p\", {\n      className: styles.ErrorMessage,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 33\n      }\n    }, __jsx(ErrorMessage, {\n      name: \"Email\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 68\n      }\n    })), __jsx(\"label\", {\n      htmlFor: \"PhoneNumber\",\n      className: styles.formLabel,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 33\n      }\n    }, __jsx(\"span\", {\n      className: styles.contentName,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 41\n      }\n    }, \"Phone Number\")), __jsx(Field, {\n      className: styles.formInput,\n      type: \"tel\",\n      id: \"PhoneNumber\",\n      name: \"PhoneNumber\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 33\n      }\n    }), __jsx(\"p\", {\n      className: styles.ErrorMessage,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 33\n      }\n    }, __jsx(ErrorMessage, {\n      name: \"PhoneNumber\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 68\n      }\n    }), \" \"), __jsx(Select, {\n      name: \"Place\",\n      options: placeOptions,\n      className: styles.selectInput,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 33\n      }\n    }), __jsx(\"p\", {\n      className: styles.ErrorMessage,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 33\n      }\n    }, __jsx(ErrorMessage, {\n      name: 'Place',\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 68\n      }\n    })), __jsx(Select, {\n      name: \"Service\",\n      options: serviceOptions,\n      className: styles.selectInput,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 33\n      }\n    }), __jsx(\"p\", {\n      className: styles.ErrorMessage,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 33\n      }\n    }, __jsx(ErrorMessage, {\n      name: 'Service',\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 68\n      }\n    }), \" \"), __jsx(\"button\", {\n      disabled: !isValid || isSubmitting,\n      type: \"submit\",\n      className: styles.btnHover,\n      style: !isValid || isSubmitting ? {\n        type: 'disabled',\n        background: '#dddddd',\n        color: 'black'\n      } : {},\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 33\n      }\n    }, \"SUBMIT\")));\n  });\n};\n\n_s(ContactForm, \"2ev0mvhfKtKU+/wFmg1ua/kU1bg=\");\n\n_c = ContactForm;\nexport default ContactForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"ContactForm\");","map":{"version":3,"sources":["D:/Sharath_Code/next/sri-global/components/ContactForm.js"],"names":["React","useState","styles","firebase","Select","Formik","Form","Field","ErrorMessage","Yup","initialValues","Name","Email","PhoneNumber","Place","Service","validationSchema","object","string","required","email","matches","message","excludeEmptyString","placeOptions","key","value","serviceOptions","ContactForm","success","setSuccess","registerUser","values","setSubmitting","resetForm","console","log","db","firestore","collection","add","dateCreated","Date","then","error","isSubmitting","isValid","contactForm","succesmsg","loader","form","margin","formLabel","contentName","formInput","selectInput","btnHover","type","background","color"],"mappings":"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","sourcesContent":["import React , {useState} from 'react'\r\nimport styles from '../styles/ContactForm.module.css'\r\nimport firebase from '../server/firebase'\r\nimport Select from './Select'\r\nimport {\r\n        Formik,\r\n        Form,\r\n        Field,\r\n        ErrorMessage,\r\n      } from 'formik'\r\nimport * as Yup from 'yup'\r\n\r\n      \r\n\r\n      const initialValues = {\r\n        Name: '',\r\n        Email: '',\r\n        PhoneNumber: '',\r\n        Place: '',\r\n        Service: ''\r\n        \r\n      }\r\n    \r\nconst validationSchema = Yup.object({\r\n    \r\n        Name: Yup.string().required('Please Enter Parent Name'),\r\n        Email: Yup.string()\r\n          .email('Invalid email format')\r\n          .required('Email Required'),\r\n        PhoneNumber: Yup.string().matches(/^[6-9]\\d{9}$/, {message: \"Please enter valid number.\", excludeEmptyString: false})\r\n                        .required('Phone number is required'),\r\n        Place: Yup.string().required('Please Choose a place'),\r\n        Service: Yup.string().required('Please Choose a place')\r\n      \r\n      })  \r\n      const placeOptions = [\r\n              {key: 'Select a Place', value: ''},\r\n              {key: 'Place1', value: 'Place1'},\r\n              {key: 'Place2', value: 'Place2'},\r\n              {key: 'None', value: 'None'},\r\n              \r\n         ]\r\n         \r\n         const serviceOptions = [\r\n                {key: 'Select a Place', value: ''},\r\n                {key: 'Place1', value: 'Place1'},\r\n                {key: 'Place2', value: 'Place2'},\r\n                {key: 'None', value: 'None'},\r\n                \r\n           ]\r\n        \r\n         \r\nconst ContactForm = () => {\r\n        const [success, setSuccess] = useState(false)\r\n        async function registerUser(values, {setSubmitting,resetForm}){\r\n                console.log('Form data', values)\r\n                console.log('form  submit start')\r\n                \r\n                const db = firebase.firestore(); \r\n                await db.collection('usersdb').add({\r\n                        Name: values.Name,\r\n                        Email: values.Email,\r\n                        PhoneNumber: values.PhoneNumber,\r\n                        Place: values.Place,\r\n                        Service: values.Service,\r\n                        dateCreated: new Date(),\r\n                        \r\n                     })\r\n                     .then(function() {\r\n                       resetForm()\r\n                       setSubmitting(false);\r\n                       setSuccess(true)\r\n                     })\r\n                    .catch(function(error) {\r\n                     // console.error(\"Error writing document: \", error);\r\n                     });    \r\n                     \r\n                     console.log('form  submit end')\r\n              }\r\n    return (\r\n            \r\n            <Formik\r\n                initialValues={ initialValues}\r\n                validationSchema={validationSchema}\r\n                onSubmit = {(values, {setSubmitting,resetForm  }) => {\r\n                        \r\n                        setSuccess(false);\r\n                       registerUser(values , {setSubmitting,resetForm });\r\n                        \r\n                        \r\n                        \r\n                }}\r\n                \r\n            >\r\n            \r\n            {({ isSubmitting, isValid  }) => (\r\n                                \r\n                                <div className={styles.contactForm}>\r\n                                     \r\n                                  {  success ? <p className={styles.succesmsg}> Form Submission successful ✔️</p> : null }\r\n                                { isSubmitting ?  <div className={styles.loader}> </div>  : \r\n                                <Form   className={styles.form}>\r\n                                <h1 style={{margin: \"0px 0px\"}}>Contact Us</h1>\r\n\r\n                                <label htmlFor=\"Name\" className={styles.formLabel}>\r\n                                        <span className={styles.contentName} >Name</span>\r\n                                </label>\r\n                                <Field className={styles.formInput} type='text'  id='Name' name='Name' />\r\n                                <p className={styles.ErrorMessage}><ErrorMessage  name='Name' /> </p>\r\n                                \r\n\r\n                                <label htmlFor=\"Email\" className={styles.formLabel}>\r\n                                        <span className={styles.contentName} >Email</span>\r\n                                </label>\r\n                                <Field className={styles.formInput} type='text'  id='Email' name='Email' />\r\n                                <p className={styles.ErrorMessage}><ErrorMessage   name='Email' /></p> \r\n\r\n                                <label htmlFor=\"PhoneNumber\" className={styles.formLabel}>\r\n                                        <span className={styles.contentName} >Phone Number</span>\r\n                                </label>\r\n                                <Field className={styles.formInput} type='tel'  id='PhoneNumber' name='PhoneNumber' />\r\n                                <p className={styles.ErrorMessage}><ErrorMessage  name='PhoneNumber' /> </p>\r\n\r\n                                \r\n\r\n                                <Select\r\n                                        \r\n                                        name='Place'\r\n                                        options={placeOptions} \r\n                                        className={styles.selectInput}\r\n                                        \r\n                                />\r\n                                <p className={styles.ErrorMessage}><ErrorMessage  name={'Place'} /></p>\r\n                               \r\n                                <Select\r\n                                        \r\n                                        name='Service'\r\n                                        options={serviceOptions} \r\n                                        className={styles.selectInput}\r\n                                        \r\n                                />\r\n                                <p className={styles.ErrorMessage}><ErrorMessage   name={'Service'} /> </p>\r\n\r\n                                \r\n                                \r\n                                \r\n                                <button\r\n                                 disabled={!isValid || isSubmitting}\r\n                                 type=\"submit\"\r\n                                 className={ styles.btnHover }\r\n                                 style={ !isValid || isSubmitting ? { type: 'disabled' , background: '#dddddd' , color: 'black'} : {}}\r\n                                >SUBMIT</button>\r\n                                </Form>\r\n\r\n                                \r\n                       \r\n            }\r\n                        </div>\r\n            )}        \r\n                \r\n            </Formik>\r\n                \r\n    )\r\n}\r\n\r\nexport default ContactForm\r\n"]},"metadata":{},"sourceType":"module"}