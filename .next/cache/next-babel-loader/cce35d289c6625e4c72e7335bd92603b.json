{"ast":null,"code":"var _jsxFileName = \"D:\\\\Sharath_Code\\\\next\\\\sri-global\\\\components\\\\ContactForm.js\";\nvar __jsx = React.createElement;\nimport React, { useState } from 'react';\nimport styles from '../styles/ContactForm.module.css';\nimport firebase from '../server/firebase';\nimport Select from './Select';\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\nimport * as Yup from 'yup';\nconst initialValues = {\n  Name: '',\n  Email: '',\n  PhoneNumber: '',\n  Place: '',\n  Service: ''\n};\nconst validationSchema = Yup.object({\n  Name: Yup.string().required('Please Enter Parent Name'),\n  Email: Yup.string().email('Invalid email format').required('Email Required'),\n  PhoneNumber: Yup.string().matches(/^[6-9]\\d{9}$/, {\n    message: \"Please enter valid number.\",\n    excludeEmptyString: false\n  }).required('Phone number is required'),\n  Place: Yup.string().required('Please Choose a place'),\n  Service: Yup.string().required('Please Choose a place')\n});\nconst placeOptions = [{\n  key: 'Select a Place',\n  value: ''\n}, {\n  key: 'Place1',\n  value: 'Place1'\n}, {\n  key: 'Place2',\n  value: 'Place2'\n}, {\n  key: 'None',\n  value: 'None'\n}];\nconst serviceOptions = [{\n  key: 'Select a Place',\n  value: ''\n}, {\n  key: 'Place1',\n  value: 'Place1'\n}, {\n  key: 'Place2',\n  value: 'Place2'\n}, {\n  key: 'None',\n  value: 'None'\n}];\n\nconst ContactForm = () => {\n  const {\n    0: success,\n    1: setSuccess\n  } = useState(false);\n\n  async function registerUser(values, {\n    setSubmitting,\n    resetForm\n  }) {\n    console.log('Form data', values);\n    console.log('form  submit start');\n    const db = firebase.firestore();\n    await db.collection('usersdb').add({\n      Name: values.Name,\n      Email: values.Email,\n      PhoneNumber: values.PhoneNumber,\n      Place: values.Place,\n      Service: values.Service,\n      dateCreated: new Date()\n    }).then(function () {\n      resetForm();\n      setSubmitting(false);\n      setSuccess(true);\n    }).catch(function (error) {// console.error(\"Error writing document: \", error);\n    });\n    console.log('form  submit end');\n  }\n\n  return __jsx(Formik, {\n    initialValues: initialValues // validationSchema={validationSchema}\n    ,\n    onSubmit: (values, {\n      setSubmitting,\n      resetForm\n    }) => {\n      setSubmitting(false);\n      setSuccess(true); //  registerUser(values , {setSubmitting,resetForm });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }\n  }, ({\n    isSubmitting,\n    isValid\n  }) => __jsx(\"div\", {\n    className: styles.contactForm,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 33\n    }\n  }, success ? __jsx(\"p\", {\n    className: styles.succesmsg,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 48\n    }\n  }, \" Form Submission successful \\u2714\\uFE0F\") : null, isSubmitting ? __jsx(\"div\", {\n    className: styles.loader,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 51\n    }\n  }, \" \") : __jsx(Form, {\n    className: styles.form,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 33\n    }\n  }, __jsx(\"h1\", {\n    style: {\n      margin: \"0px 0px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 33\n    }\n  }, \"Contact Us\"), __jsx(\"label\", {\n    htmlFor: \"Name\",\n    className: styles.formLabel,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 33\n    }\n  }, __jsx(\"span\", {\n    className: styles.contentName,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 41\n    }\n  }, \"Name\")), __jsx(Field, {\n    className: styles.formInput,\n    type: \"text\",\n    id: \"Name\",\n    name: \"Name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 33\n    }\n  }), __jsx(\"p\", {\n    className: styles.ErrorMessage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 33\n    }\n  }, __jsx(ErrorMessage, {\n    name: \"Name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 68\n    }\n  }), \" \"), __jsx(\"label\", {\n    htmlFor: \"Email\",\n    className: styles.formLabel,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 33\n    }\n  }, __jsx(\"span\", {\n    className: styles.contentName,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 41\n    }\n  }, \"Email\")), __jsx(Field, {\n    className: styles.formInput,\n    type: \"text\",\n    id: \"Email\",\n    name: \"Email\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 33\n    }\n  }), __jsx(\"p\", {\n    className: styles.ErrorMessage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 33\n    }\n  }, __jsx(ErrorMessage, {\n    name: \"Email\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 68\n    }\n  })), __jsx(\"label\", {\n    htmlFor: \"PhoneNumber\",\n    className: styles.formLabel,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 33\n    }\n  }, __jsx(\"span\", {\n    className: styles.contentName,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 41\n    }\n  }, \"Phone Number\")), __jsx(Field, {\n    className: styles.formInput,\n    type: \"tel\",\n    id: \"PhoneNumber\",\n    name: \"PhoneNumber\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 33\n    }\n  }), __jsx(\"p\", {\n    className: styles.ErrorMessage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 33\n    }\n  }, __jsx(ErrorMessage, {\n    name: \"PhoneNumber\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 68\n    }\n  }), \" \"), __jsx(Select, {\n    name: \"Place\",\n    options: placeOptions,\n    className: styles.selectInput,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 33\n    }\n  }), __jsx(\"p\", {\n    className: styles.ErrorMessage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 33\n    }\n  }, __jsx(ErrorMessage, {\n    name: 'Place',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 68\n    }\n  })), __jsx(Select, {\n    name: \"Service\",\n    options: serviceOptions,\n    className: styles.selectInput,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 33\n    }\n  }), __jsx(\"p\", {\n    className: styles.ErrorMessage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 33\n    }\n  }, __jsx(ErrorMessage, {\n    name: 'Service',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 68\n    }\n  }), \" \"), __jsx(\"button\", {\n    disabled: !isValid || isSubmitting,\n    type: \"submit\",\n    className: styles.btnHover,\n    style: !isValid || isSubmitting ? {\n      type: 'disabled',\n      background: '#dddddd',\n      color: 'black'\n    } : {},\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 33\n    }\n  }, \"SUBMIT\"))));\n};\n\nexport default ContactForm;","map":{"version":3,"sources":["D:/Sharath_Code/next/sri-global/components/ContactForm.js"],"names":["React","useState","styles","firebase","Select","Formik","Form","Field","ErrorMessage","Yup","initialValues","Name","Email","PhoneNumber","Place","Service","validationSchema","object","string","required","email","matches","message","excludeEmptyString","placeOptions","key","value","serviceOptions","ContactForm","success","setSuccess","registerUser","values","setSubmitting","resetForm","console","log","db","firestore","collection","add","dateCreated","Date","then","catch","error","isSubmitting","isValid","contactForm","succesmsg","loader","form","margin","formLabel","contentName","formInput","selectInput","btnHover","type","background","color"],"mappings":"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","sourcesContent":["import React , {useState} from 'react'\r\nimport styles from '../styles/ContactForm.module.css'\r\nimport firebase from '../server/firebase'\r\nimport Select from './Select'\r\nimport {\r\n        Formik,\r\n        Form,\r\n        Field,\r\n        ErrorMessage,\r\n      } from 'formik'\r\nimport * as Yup from 'yup'\r\n\r\n      \r\n\r\n      const initialValues = {\r\n        Name: '',\r\n        Email: '',\r\n        PhoneNumber: '',\r\n        Place: '',\r\n        Service: ''\r\n        \r\n      }\r\n    \r\nconst validationSchema = Yup.object({\r\n    \r\n        Name: Yup.string().required('Please Enter Parent Name'),\r\n        Email: Yup.string()\r\n          .email('Invalid email format')\r\n          .required('Email Required'),\r\n        PhoneNumber: Yup.string().matches(/^[6-9]\\d{9}$/, {message: \"Please enter valid number.\", excludeEmptyString: false})\r\n                        .required('Phone number is required'),\r\n        Place: Yup.string().required('Please Choose a place'),\r\n        Service: Yup.string().required('Please Choose a place')\r\n      \r\n      })  \r\n      const placeOptions = [\r\n              {key: 'Select a Place', value: ''},\r\n              {key: 'Place1', value: 'Place1'},\r\n              {key: 'Place2', value: 'Place2'},\r\n              {key: 'None', value: 'None'},\r\n              \r\n         ]\r\n         \r\n         const serviceOptions = [\r\n                {key: 'Select a Place', value: ''},\r\n                {key: 'Place1', value: 'Place1'},\r\n                {key: 'Place2', value: 'Place2'},\r\n                {key: 'None', value: 'None'},\r\n                \r\n           ]\r\n        \r\n         \r\nconst ContactForm = () => {\r\n        const [success, setSuccess] = useState(false)\r\n        async function registerUser(values, {setSubmitting,resetForm}){\r\n                console.log('Form data', values)\r\n                console.log('form  submit start')\r\n                \r\n                const db = firebase.firestore(); \r\n                await db.collection('usersdb').add({\r\n                        Name: values.Name,\r\n                        Email: values.Email,\r\n                        PhoneNumber: values.PhoneNumber,\r\n                        Place: values.Place,\r\n                        Service: values.Service,\r\n                        dateCreated: new Date(),\r\n                        \r\n                     })\r\n                     .then(function() {\r\n                       resetForm()\r\n                       setSubmitting(false);\r\n                       setSuccess(true)\r\n                     })\r\n                    .catch(function(error) {\r\n                     // console.error(\"Error writing document: \", error);\r\n                     });    \r\n                     \r\n                     console.log('form  submit end')\r\n              }\r\n    return (\r\n            \r\n            <Formik\r\n                initialValues={ initialValues}\r\n                // validationSchema={validationSchema}\r\n                onSubmit = {(values, {setSubmitting,resetForm  }) => {\r\n                        setSubmitting(false);\r\n                        setSuccess(true);\r\n                      //  registerUser(values , {setSubmitting,resetForm });\r\n                        \r\n                        \r\n                        \r\n                }}\r\n                \r\n            >\r\n            \r\n            {({ isSubmitting, isValid  }) => (\r\n                                \r\n                                <div className={styles.contactForm}>\r\n                                     \r\n                                  {  success ? <p className={styles.succesmsg}> Form Submission successful ✔️</p> : null }\r\n                                { isSubmitting ?  <div className={styles.loader}> </div>  : \r\n                                <Form   className={styles.form}>\r\n                                <h1 style={{margin: \"0px 0px\"}}>Contact Us</h1>\r\n\r\n                                <label htmlFor=\"Name\" className={styles.formLabel}>\r\n                                        <span className={styles.contentName} >Name</span>\r\n                                </label>\r\n                                <Field className={styles.formInput} type='text'  id='Name' name='Name' />\r\n                                <p className={styles.ErrorMessage}><ErrorMessage  name='Name' /> </p>\r\n                                \r\n\r\n                                <label htmlFor=\"Email\" className={styles.formLabel}>\r\n                                        <span className={styles.contentName} >Email</span>\r\n                                </label>\r\n                                <Field className={styles.formInput} type='text'  id='Email' name='Email' />\r\n                                <p className={styles.ErrorMessage}><ErrorMessage   name='Email' /></p> \r\n\r\n                                <label htmlFor=\"PhoneNumber\" className={styles.formLabel}>\r\n                                        <span className={styles.contentName} >Phone Number</span>\r\n                                </label>\r\n                                <Field className={styles.formInput} type='tel'  id='PhoneNumber' name='PhoneNumber' />\r\n                                <p className={styles.ErrorMessage}><ErrorMessage  name='PhoneNumber' /> </p>\r\n\r\n                                \r\n\r\n                                <Select\r\n                                        \r\n                                        name='Place'\r\n                                        options={placeOptions} \r\n                                        className={styles.selectInput}\r\n                                        \r\n                                />\r\n                                <p className={styles.ErrorMessage}><ErrorMessage  name={'Place'} /></p>\r\n                               \r\n                                <Select\r\n                                        \r\n                                        name='Service'\r\n                                        options={serviceOptions} \r\n                                        className={styles.selectInput}\r\n                                        \r\n                                />\r\n                                <p className={styles.ErrorMessage}><ErrorMessage   name={'Service'} /> </p>\r\n\r\n                                \r\n                                \r\n                                \r\n                                <button\r\n                                 disabled={!isValid || isSubmitting}\r\n                                 type=\"submit\"\r\n                                 className={ styles.btnHover }\r\n                                 style={ !isValid || isSubmitting ? { type: 'disabled' , background: '#dddddd' , color: 'black'} : {}}\r\n                                >SUBMIT</button>\r\n                                </Form>\r\n\r\n                                \r\n                       \r\n            }\r\n                        </div>\r\n            )}        \r\n                \r\n            </Formik>\r\n                \r\n    )\r\n}\r\n\r\nexport default ContactForm\r\n"]},"metadata":{},"sourceType":"module"}