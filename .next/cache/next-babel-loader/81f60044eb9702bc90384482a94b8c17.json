{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _this = this,\n    _jsxFileName = \"D:\\\\Sharath_Code\\\\next\\\\sri-global\\\\components\\\\ContactForm.js\";\n\nvar __jsx = React.createElement;\nimport React from 'react';\nimport styles from '../styles/ContactForm.module.css';\nimport firebase from '../server/firebase';\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\nimport * as Yup from 'yup';\nvar initialValues = {\n  Name: 'ajkn',\n  Email: '',\n  PhoneNumber: '',\n  Region: '',\n  Service: ''\n};\nvar validationSchema = Yup.object({\n  Name: Yup.string().required('Please Enter Parent Name'),\n  Email: Yup.string().email('Invalid email format').required('Email Required'),\n  PhoneNumber: Yup.string().matches(/^[6-9]\\d{9}$/, {\n    message: \"Please enter valid number.\",\n    excludeEmptyString: false\n  })\n});\n\nvar ContactForm = function ContactForm() {\n  function registerUser(_x) {\n    return _registerUser.apply(this, arguments);\n  }\n\n  function _registerUser() {\n    _registerUser = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(values) {\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              console.log('Form data', values);\n              console.log('form  submit start'); // const db = firebase.firestore(); \n              // db.collection(\"studentdb\").add({\n              //       parentname: \"parengtname\",\n              //       username: \"childname\",\n              //       userType: \"student\"\n              //      })\n              //      .then(function() {\n              //       console.log(\"Document successfully written!\");\n              //      })\n              //     .catch(function(error) {\n              //       console.error(\"Error writing document: \", error);\n              //      });    \n\n              console.log('form  submit end');\n\n            case 3:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n    return _registerUser.apply(this, arguments);\n  }\n\n  return __jsx(Formik, {\n    initialValues: initialValues,\n    validationSchema: validationSchema,\n    onSubmit: function onSubmit(values, _ref) {\n      var setSubmitting = _ref.setSubmitting;\n      registerUser(values);\n      setSubmitting(false);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }\n  }, function (_ref2) {\n    var isSubmitting = _ref2.isSubmitting,\n        isValid = _ref2.isValid;\n    return __jsx(\"div\", {\n      className: styles.contactForm,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 33\n      }\n    }, __jsx(Form, {\n      className: styles.form,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 33\n      }\n    }, __jsx(\"h1\", {\n      style: {\n        margin: \"0px 0px\"\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 33\n      }\n    }, \"contatct Us\"), __jsx(\"label\", {\n      htmlFor: \"Name\",\n      className: styles.formLabel,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 33\n      }\n    }, __jsx(\"span\", {\n      className: styles.contentName,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 41\n      }\n    }, \"Name\")), __jsx(Field, {\n      className: styles.formInput,\n      type: \"text\",\n      id: \"Name\",\n      name: \"Name\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 33\n      }\n    }), __jsx(ErrorMessage, {\n      name: \"Name\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 33\n      }\n    }), __jsx(\"label\", {\n      htmlFor: \"Email\",\n      className: styles.formLabel,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 33\n      }\n    }, __jsx(\"span\", {\n      className: styles.contentName,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 41\n      }\n    }, \"Email\")), __jsx(Field, {\n      className: styles.formInput,\n      type: \"text\",\n      id: \"Email\",\n      name: \"Email\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 33\n      }\n    }), __jsx(ErrorMessage, {\n      name: \"Email\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 33\n      }\n    }), __jsx(\"label\", {\n      htmlFor: \"PhoneNumber\",\n      className: styles.formLabel,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 33\n      }\n    }, __jsx(\"span\", {\n      className: styles.contentName,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 41\n      }\n    }, \"Phone Number\")), __jsx(Field, {\n      className: styles.formInput,\n      type: \"tel\",\n      id: \"PhoneNumber\",\n      name: \"PhoneNumber\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 33\n      }\n    }), __jsx(ErrorMessage, {\n      name: \"PhoneNumber\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 33\n      }\n    }), __jsx(\"button\", {\n      disabled: !isValid || isSubmitting,\n      type: \"submit\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 33\n      }\n    }, \"SUBMIT\")));\n  });\n};\n\n_c = ContactForm;\nexport default ContactForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"ContactForm\");","map":{"version":3,"sources":["D:/Sharath_Code/next/sri-global/components/ContactForm.js"],"names":["React","styles","firebase","Formik","Form","Field","ErrorMessage","Yup","initialValues","Name","Email","PhoneNumber","Region","Service","validationSchema","object","string","required","email","matches","message","excludeEmptyString","ContactForm","registerUser","values","console","log","setSubmitting","isSubmitting","isValid","contactForm","form","margin","formLabel","contentName","formInput"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,kCAAnB;AACA,OAAOC,QAAP,MAAqB,oBAArB;AAEA,SACQC,MADR,EAEQC,IAFR,EAGQC,KAHR,EAIQC,YAJR,QAKa,QALb;AAMA,OAAO,KAAKC,GAAZ,MAAqB,KAArB;AAIM,IAAMC,aAAa,GAAG;AACpBC,EAAAA,IAAI,EAAE,MADc;AAEpBC,EAAAA,KAAK,EAAE,EAFa;AAGpBC,EAAAA,WAAW,EAAE,EAHO;AAIpBC,EAAAA,MAAM,EAAE,EAJY;AAKpBC,EAAAA,OAAO,EAAE;AALW,CAAtB;AASN,IAAMC,gBAAgB,GAAGP,GAAG,CAACQ,MAAJ,CAAW;AAE5BN,EAAAA,IAAI,EAAEF,GAAG,CAACS,MAAJ,GAAaC,QAAb,CAAsB,0BAAtB,CAFsB;AAG5BP,EAAAA,KAAK,EAAEH,GAAG,CAACS,MAAJ,GACJE,KADI,CACE,sBADF,EAEJD,QAFI,CAEK,gBAFL,CAHqB;AAM5BN,EAAAA,WAAW,EAAEJ,GAAG,CAACS,MAAJ,GAAaG,OAAb,CAAqB,cAArB,EAAqC;AAACC,IAAAA,OAAO,EAAE,4BAAV;AAAwCC,IAAAA,kBAAkB,EAAE;AAA5D,GAArC;AANe,CAAX,CAAzB;;AAUA,IAAMC,WAAW,GAAG,SAAdA,WAAc,GAAM;AAAA,WAEHC,YAFG;AAAA;AAAA;;AAAA;AAAA,6EAElB,iBAA4BC,MAA5B;AAAA;AAAA;AAAA;AAAA;AACQC,cAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAyBF,MAAzB;AACAC,cAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ,EAFR,CAGQ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEKD,cAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ;;AAhBb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAFkB;AAAA;AAAA;;AAoBtB,SAEQ,MAAC,MAAD;AACI,IAAA,aAAa,EAAGlB,aADpB;AAEI,IAAA,gBAAgB,EAAEM,gBAFtB;AAGI,IAAA,QAAQ,EAAI,kBAACU,MAAD,QAA6B;AAAA,UAAnBG,aAAmB,QAAnBA,aAAmB;AACjCJ,MAAAA,YAAY,CAACC,MAAD,CAAZ;AACAG,MAAAA,aAAa,CAAC,KAAD,CAAb;AACP,KANL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KASC;AAAA,QAAGC,YAAH,SAAGA,YAAH;AAAA,QAAiBC,OAAjB,SAAiBA,OAAjB;AAAA,WACmB;AAAK,MAAA,SAAS,EAAE5B,MAAM,CAAC6B,WAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA,MAAC,IAAD;AAAQ,MAAA,SAAS,EAAE7B,MAAM,CAAC8B,IAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEA;AAAI,MAAA,KAAK,EAAE;AAACC,QAAAA,MAAM,EAAE;AAAT,OAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAFA,EAIA;AAAO,MAAA,OAAO,EAAC,MAAf;AAAsB,MAAA,SAAS,EAAE/B,MAAM,CAACgC,SAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACQ;AAAM,MAAA,SAAS,EAAEhC,MAAM,CAACiC,WAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADR,CAJA,EAOA,MAAC,KAAD;AAAO,MAAA,SAAS,EAAEjC,MAAM,CAACkC,SAAzB;AAAoC,MAAA,IAAI,EAAC,MAAzC;AAAiD,MAAA,EAAE,EAAC,MAApD;AAA2D,MAAA,IAAI,EAAC,MAAhE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAPA,EAQA,MAAC,YAAD;AAAc,MAAA,IAAI,EAAC,MAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MARA,EAUA;AAAO,MAAA,OAAO,EAAC,OAAf;AAAuB,MAAA,SAAS,EAAElC,MAAM,CAACgC,SAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACQ;AAAM,MAAA,SAAS,EAAEhC,MAAM,CAACiC,WAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADR,CAVA,EAaA,MAAC,KAAD;AAAO,MAAA,SAAS,EAAEjC,MAAM,CAACkC,SAAzB;AAAoC,MAAA,IAAI,EAAC,MAAzC;AAAiD,MAAA,EAAE,EAAC,OAApD;AAA4D,MAAA,IAAI,EAAC,OAAjE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAbA,EAcA,MAAC,YAAD;AAAc,MAAA,IAAI,EAAC,OAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAdA,EAgBA;AAAO,MAAA,OAAO,EAAC,aAAf;AAA6B,MAAA,SAAS,EAAElC,MAAM,CAACgC,SAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACQ;AAAM,MAAA,SAAS,EAAEhC,MAAM,CAACiC,WAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADR,CAhBA,EAmBA,MAAC,KAAD;AAAO,MAAA,SAAS,EAAEjC,MAAM,CAACkC,SAAzB;AAAoC,MAAA,IAAI,EAAC,KAAzC;AAAgD,MAAA,EAAE,EAAC,aAAnD;AAAiE,MAAA,IAAI,EAAC,aAAtE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAnBA,EAoBA,MAAC,YAAD;AAAc,MAAA,IAAI,EAAC,aAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MApBA,EAsBA;AACC,MAAA,QAAQ,EAAE,CAACN,OAAD,IAAYD,YADvB;AAEC,MAAA,IAAI,EAAC,QAFN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAtBA,CADA,CADnB;AAAA,GATD,CAFR;AAgDH,CApED;;KAAMN,W;AAsEN,eAAeA,WAAf","sourcesContent":["import React from 'react'\r\nimport styles from '../styles/ContactForm.module.css'\r\nimport firebase from '../server/firebase'\r\n\r\nimport {\r\n        Formik,\r\n        Form,\r\n        Field,\r\n        ErrorMessage,\r\n      } from 'formik'\r\nimport * as Yup from 'yup'\r\n\r\n\r\n\r\n      const initialValues = {\r\n        Name: 'ajkn',\r\n        Email: '',\r\n        PhoneNumber: '',\r\n        Region: '',\r\n        Service: ''\r\n        \r\n      }\r\n    \r\nconst validationSchema = Yup.object({\r\n    \r\n        Name: Yup.string().required('Please Enter Parent Name'),\r\n        Email: Yup.string()\r\n          .email('Invalid email format')\r\n          .required('Email Required'),\r\n        PhoneNumber: Yup.string().matches(/^[6-9]\\d{9}$/, {message: \"Please enter valid number.\", excludeEmptyString: false})\r\n\r\n      \r\n      })      \r\nconst ContactForm = () => {\r\n        \r\n        async function registerUser(values){\r\n                console.log('Form data', values)\r\n                console.log('form  submit start')\r\n                // const db = firebase.firestore(); \r\n                // db.collection(\"studentdb\").add({\r\n                //       parentname: \"parengtname\",\r\n                //       username: \"childname\",\r\n                //       userType: \"student\"\r\n                //      })\r\n                //      .then(function() {\r\n                //       console.log(\"Document successfully written!\");\r\n                //      })\r\n                //     .catch(function(error) {\r\n                //       console.error(\"Error writing document: \", error);\r\n                //      });    \r\n          \r\n                     console.log('form  submit end')\r\n              }\r\n    return (\r\n            \r\n            <Formik\r\n                initialValues={ initialValues}\r\n                validationSchema={validationSchema}\r\n                onSubmit = {(values, {setSubmitting}) => {\r\n                        registerUser(values);\r\n                        setSubmitting(false);\r\n                }}\r\n            >\r\n            \r\n            {({ isSubmitting, isValid }) => (\r\n                                <div className={styles.contactForm}>\r\n                                <Form   className={styles.form}>\r\n\r\n                                <h1 style={{margin: \"0px 0px\"}}>contatct Us</h1>\r\n\r\n                                <label htmlFor=\"Name\" className={styles.formLabel}>\r\n                                        <span className={styles.contentName} >Name</span>\r\n                                </label>\r\n                                <Field className={styles.formInput} type='text'  id='Name' name='Name' />\r\n                                <ErrorMessage name='Name' /> \r\n\r\n                                <label htmlFor=\"Email\" className={styles.formLabel}>\r\n                                        <span className={styles.contentName} >Email</span>\r\n                                </label>\r\n                                <Field className={styles.formInput} type='text'  id='Email' name='Email' />\r\n                                <ErrorMessage name='Email' /> \r\n\r\n                                <label htmlFor=\"PhoneNumber\" className={styles.formLabel}>\r\n                                        <span className={styles.contentName} >Phone Number</span>\r\n                                </label>\r\n                                <Field className={styles.formInput} type='tel'  id='PhoneNumber' name='PhoneNumber' />\r\n                                <ErrorMessage name='PhoneNumber' /> \r\n                                \r\n                                <button\r\n                                 disabled={!isValid || isSubmitting}\r\n                                 type=\"submit\"\r\n                                >SUBMIT</button>\r\n                                </Form>\r\n                       \r\n                        \r\n                        </div>\r\n            )}         \r\n                \r\n            </Formik>\r\n                \r\n    )\r\n}\r\n\r\nexport default ContactForm\r\n"]},"metadata":{},"sourceType":"module"}