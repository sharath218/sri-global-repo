{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from 'react';\nimport { Field, ErrorMessage } from 'formik';\nimport styles from '../styles/ContactForm.module.css';\n\nfunction Select(props) {\n  const {\n    name,\n    options\n  } = props,\n        rest = _objectWithoutProperties(props, [\"name\", \"options\"]);\n\n  return __jsx(\"div\", {\n    className: \"form-control\"\n  }, __jsx(Field, _extends({\n    style: {\n      width: '100%',\n      minWidth: '280px',\n      maxWidth: '100%'\n    },\n    as: \"select\",\n    id: name,\n    name: name\n  }, rest), options.map(option => {\n    return __jsx(\"option\", {\n      key: option.value,\n      value: option.value\n    }, option.key);\n  })));\n}\n\nexport default Select;","map":null,"metadata":{},"sourceType":"module"}