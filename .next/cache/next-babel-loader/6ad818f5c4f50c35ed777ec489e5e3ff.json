{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _this = this,\n    _jsxFileName = \"D:\\\\Sharath_Code\\\\next\\\\sri-global\\\\components\\\\ContactForm.js\";\n\nvar __jsx = React.createElement;\nimport React from 'react';\nimport styles from '../styles/ContactForm.module.css';\nimport firebase from '../server/firebase';\nimport Select from './Select';\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\nimport * as Yup from 'yup';\nvar initialValues = {\n  Name: 'ajkn',\n  Email: 's@s.com',\n  PhoneNumber: '9999999999',\n  Place: '',\n  Service: ''\n};\nvar validationSchema = Yup.object({\n  Name: Yup.string().required('Please Enter Parent Name'),\n  Email: Yup.string().email('Invalid email format').required('Email Required'),\n  PhoneNumber: Yup.string().matches(/^[6-9]\\d{9}$/, {\n    message: \"Please enter valid number.\",\n    excludeEmptyString: false\n  }).required('Phone number is required'),\n  Place: Yup.string().required('Please Choose a place'),\n  Service: Yup.string().required('Please Choose a place')\n});\nvar placeOptions = [{\n  key: 'Select a Place',\n  value: ''\n}, {\n  key: 'Place1',\n  value: 'Place1'\n}, {\n  key: 'Place2',\n  value: 'Place2'\n}, {\n  key: 'None',\n  value: 'None'\n}];\nvar serviceOptions = [{\n  key: 'Select a Place',\n  value: ''\n}, {\n  key: 'Place1',\n  value: 'Place1'\n}, {\n  key: 'Place2',\n  value: 'Place2'\n}, {\n  key: 'None',\n  value: 'None'\n}];\n\nvar formSucces = function formSucces() {\n  console.log('form success');\n};\n\nvar ContactForm = function ContactForm() {\n  function registerUser(_x, _x2) {\n    return _registerUser.apply(this, arguments);\n  }\n\n  function _registerUser() {\n    _registerUser = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(values, onSubmitProps) {\n      var db;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              console.log('Form data', values);\n              console.log('form  submit start');\n              db = firebase.firestore();\n              _context.next = 5;\n              return db.collection('usersdb').add({\n                Name: values.Name,\n                Email: values.Email,\n                PhoneNumber: values.PhoneNumber,\n                Place: values.Place,\n                Service: values.Service,\n                dateCreated: new Date()\n              }).then(function () {\n                formSucces();\n              })[\"catch\"](function (error) {// console.error(\"Error writing document: \", error);\n              });\n\n            case 5:\n              console.log('form  submit end');\n\n            case 6:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n    return _registerUser.apply(this, arguments);\n  }\n\n  return __jsx(Formik, {\n    initialValues: initialValues,\n    validationSchema: validationSchema,\n    onSubmit: function onSubmit(values, _ref) {\n      var setSubmitting = _ref.setSubmitting,\n          onSubmitProps = _ref.onSubmitProps;\n      registerUser(values, {\n        onSubmitProps: onSubmitProps\n      });\n      setSubmitting(false);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }\n  }, function (_ref2) {\n    var isSubmitting = _ref2.isSubmitting,\n        isValid = _ref2.isValid;\n    return __jsx(\"div\", {\n      className: styles.contactForm,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 33\n      }\n    }, __jsx(Form, {\n      className: styles.form,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 33\n      }\n    }, __jsx(\"h1\", {\n      style: {\n        margin: \"0px 0px\"\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 33\n      }\n    }, \"contatct Us\"), __jsx(\"label\", {\n      htmlFor: \"Name\",\n      className: styles.formLabel,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 33\n      }\n    }, __jsx(\"span\", {\n      className: styles.contentName,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 41\n      }\n    }, \"Name\")), __jsx(Field, {\n      className: styles.formInput,\n      type: \"text\",\n      id: \"Name\",\n      name: \"Name\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 33\n      }\n    }), __jsx(\"p\", {\n      className: styles.ErrorMessage,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 33\n      }\n    }, __jsx(ErrorMessage, {\n      name: \"Name\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 68\n      }\n    }), \" \"), __jsx(\"label\", {\n      htmlFor: \"Email\",\n      className: styles.formLabel,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 33\n      }\n    }, __jsx(\"span\", {\n      className: styles.contentName,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 41\n      }\n    }, \"Email\")), __jsx(Field, {\n      className: styles.formInput,\n      type: \"text\",\n      id: \"Email\",\n      name: \"Email\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 33\n      }\n    }), __jsx(\"p\", {\n      className: styles.ErrorMessage,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 33\n      }\n    }, __jsx(ErrorMessage, {\n      name: \"Email\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 68\n      }\n    })), __jsx(\"label\", {\n      htmlFor: \"PhoneNumber\",\n      className: styles.formLabel,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 33\n      }\n    }, __jsx(\"span\", {\n      className: styles.contentName,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 41\n      }\n    }, \"Phone Number\")), __jsx(Field, {\n      className: styles.formInput,\n      type: \"tel\",\n      id: \"PhoneNumber\",\n      name: \"PhoneNumber\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 33\n      }\n    }), __jsx(\"p\", {\n      className: styles.ErrorMessage,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 33\n      }\n    }, __jsx(ErrorMessage, {\n      name: \"PhoneNumber\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 68\n      }\n    }), \" \"), __jsx(\"label\", {\n      htmlFor: \"Place\",\n      className: styles.formLabel,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 33\n      }\n    }, __jsx(\"span\", {\n      className: styles.contentName,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 41\n      }\n    }, \"Select A Place\")), __jsx(Select, {\n      name: \"Place\",\n      options: placeOptions,\n      className: styles.formInput,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 33\n      }\n    }), __jsx(\"p\", {\n      className: styles.ErrorMessage,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 33\n      }\n    }, __jsx(ErrorMessage, {\n      name: 'Place',\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 68\n      }\n    })), __jsx(\"label\", {\n      htmlFor: \"Service\",\n      className: styles.formLabel,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 33\n      }\n    }, __jsx(\"span\", {\n      className: styles.contentName,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 41\n      }\n    }, \"Select A Service\")), __jsx(Select, {\n      name: \"Service\",\n      options: serviceOptions,\n      className: styles.formInput,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 33\n      }\n    }), __jsx(\"p\", {\n      className: styles.ErrorMessage,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 33\n      }\n    }, __jsx(ErrorMessage, {\n      name: 'Service',\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 68\n      }\n    }), \" \"), __jsx(\"button\", {\n      disabled: !isValid || isSubmitting,\n      type: \"submit\",\n      className: styles.btnHover,\n      style: !isValid || isSubmitting ? {\n        type: 'disabled',\n        background: '#dddddd',\n        color: 'black'\n      } : {},\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 33\n      }\n    }, \"SUBMIT\")));\n  });\n};\n\n_c = ContactForm;\nexport default ContactForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"ContactForm\");","map":{"version":3,"sources":["D:/Sharath_Code/next/sri-global/components/ContactForm.js"],"names":["React","styles","firebase","Select","Formik","Form","Field","ErrorMessage","Yup","initialValues","Name","Email","PhoneNumber","Place","Service","validationSchema","object","string","required","email","matches","message","excludeEmptyString","placeOptions","key","value","serviceOptions","formSucces","console","log","ContactForm","registerUser","values","onSubmitProps","db","firestore","collection","add","dateCreated","Date","then","error","setSubmitting","isSubmitting","isValid","contactForm","form","margin","formLabel","contentName","formInput","btnHover","type","background","color"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport styles from '../styles/ContactForm.module.css'\r\nimport firebase from '../server/firebase'\r\nimport Select from './Select'\r\nimport {\r\n        Formik,\r\n        Form,\r\n        Field,\r\n        ErrorMessage,\r\n      } from 'formik'\r\nimport * as Yup from 'yup'\r\n\r\n      \r\n\r\n      const initialValues = {\r\n        Name: 'ajkn',\r\n        Email: 's@s.com',\r\n        PhoneNumber: '9999999999',\r\n        Place: '',\r\n        Service: ''\r\n        \r\n      }\r\n    \r\nconst validationSchema = Yup.object({\r\n    \r\n        Name: Yup.string().required('Please Enter Parent Name'),\r\n        Email: Yup.string()\r\n          .email('Invalid email format')\r\n          .required('Email Required'),\r\n        PhoneNumber: Yup.string().matches(/^[6-9]\\d{9}$/, {message: \"Please enter valid number.\", excludeEmptyString: false})\r\n                        .required('Phone number is required'),\r\n        Place: Yup.string().required('Please Choose a place'),\r\n        Service: Yup.string().required('Please Choose a place')\r\n      \r\n      })  \r\n      const placeOptions = [\r\n              {key: 'Select a Place', value: ''},\r\n              {key: 'Place1', value: 'Place1'},\r\n              {key: 'Place2', value: 'Place2'},\r\n              {key: 'None', value: 'None'},\r\n              \r\n         ]\r\n         \r\n         const serviceOptions = [\r\n                {key: 'Select a Place', value: ''},\r\n                {key: 'Place1', value: 'Place1'},\r\n                {key: 'Place2', value: 'Place2'},\r\n                {key: 'None', value: 'None'},\r\n                \r\n           ]\r\nconst formSucces = () =>{\r\n        console.log('form success');\r\n}           \r\n         \r\nconst ContactForm = () => {\r\n        \r\n        async function registerUser(values, onSubmitProps){\r\n                console.log('Form data', values)\r\n                console.log('form  submit start')\r\n                \r\n                const db = firebase.firestore(); \r\n               await db.collection('usersdb').add({\r\n                        Name: values.Name,\r\n                        Email: values.Email,\r\n                        PhoneNumber: values.PhoneNumber,\r\n                        Place: values.Place,\r\n                        Service: values.Service,\r\n                        dateCreated: new Date(),\r\n                        \r\n                     })\r\n                     .then(function() {\r\n                        formSucces()\r\n                     })\r\n                    .catch(function(error) {\r\n                     // console.error(\"Error writing document: \", error);\r\n                     });    \r\n                     \r\n                     console.log('form  submit end')\r\n              }\r\n    return (\r\n            \r\n            <Formik\r\n                initialValues={ initialValues}\r\n                validationSchema={validationSchema}\r\n                onSubmit = {(values, {setSubmitting , onSubmitProps}) => {\r\n                        registerUser(values ,{ onSubmitProps});\r\n                        setSubmitting(false);\r\n                        \r\n                }}\r\n            >\r\n            \r\n            {({ isSubmitting, isValid  }) => (\r\n                                <div className={styles.contactForm}>\r\n                                <Form   className={styles.form}>\r\n\r\n                                <h1 style={{margin: \"0px 0px\"}}>contatct Us</h1>\r\n\r\n                                <label htmlFor=\"Name\" className={styles.formLabel}>\r\n                                        <span className={styles.contentName} >Name</span>\r\n                                </label>\r\n                                <Field className={styles.formInput} type='text'  id='Name' name='Name' />\r\n                                <p className={styles.ErrorMessage}><ErrorMessage  name='Name' /> </p>\r\n                                \r\n\r\n                                <label htmlFor=\"Email\" className={styles.formLabel}>\r\n                                        <span className={styles.contentName} >Email</span>\r\n                                </label>\r\n                                <Field className={styles.formInput} type='text'  id='Email' name='Email' />\r\n                                <p className={styles.ErrorMessage}><ErrorMessage   name='Email' /></p> \r\n\r\n                                <label htmlFor=\"PhoneNumber\" className={styles.formLabel}>\r\n                                        <span className={styles.contentName} >Phone Number</span>\r\n                                </label>\r\n                                <Field className={styles.formInput} type='tel'  id='PhoneNumber' name='PhoneNumber' />\r\n                                <p className={styles.ErrorMessage}><ErrorMessage  name='PhoneNumber' /> </p>\r\n\r\n                                <label htmlFor=\"Place\" className={styles.formLabel}>\r\n                                        <span className={styles.contentName} >Select A Place</span>\r\n                                </label>\r\n\r\n                                <Select\r\n                                        \r\n                                        name='Place'\r\n                                        options={placeOptions} \r\n                                        className={styles.formInput}\r\n                                        \r\n                                />\r\n                                <p className={styles.ErrorMessage}><ErrorMessage  name={'Place'} /></p>\r\n                                <label htmlFor=\"Service\" className={styles.formLabel}>\r\n                                        <span className={styles.contentName} >Select A Service</span>\r\n                                </label>                              \r\n                                \r\n                                <Select\r\n                                        \r\n                                        name='Service'\r\n                                        options={serviceOptions} \r\n                                        className={styles.formInput}\r\n                                        \r\n                                />\r\n                                <p className={styles.ErrorMessage}><ErrorMessage   name={'Service'} /> </p>\r\n\r\n                                \r\n                                \r\n                                \r\n                                <button\r\n                                 disabled={!isValid || isSubmitting}\r\n                                 type=\"submit\"\r\n                                 className={ styles.btnHover }\r\n                                 style={ !isValid || isSubmitting ? { type: 'disabled' , background: '#dddddd' , color: 'black'} : {}}\r\n                                >SUBMIT</button>\r\n                                </Form>\r\n                       \r\n                        \r\n                        </div>\r\n            )}         \r\n                \r\n            </Formik>\r\n                \r\n    )\r\n}\r\n\r\nexport default ContactForm\r\n"]},"metadata":{},"sourceType":"module"}